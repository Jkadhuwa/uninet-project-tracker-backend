version: 2.1
orbs: 
  node: circleci/node@2.0.2
  docker: circleci/docker@0.5.13
jobs:
  build:
    environment:
        CC_TEST_REPORTER_ID: a747a4af386dcea17c874789f92176cea0162ec91ca46b0e6cb8db300fba7a15
    docker:
        - image: circleci/node:12.13.0
        - image: circleci/postgres:9.6.2-alpine
          environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
    steps:
        - checkout
        # Download and cache dependencies
        - restore_cache:
            keys:
              - v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
              # fallback to using the latest cache if no exact match is found
              - v1-dependencies-
        - run:
            name: Install dependencies
            command: yarn install
  
        - save_cache:
            paths:
              - node_modules
            key: v1-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
        # - run:
        #     name: Run migrations
        #     command: yarn db:migrate
        # Download code climate reporter.
        - run:
            name: Install Code Climate Test Reporter
            command: |
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
        - run:
            name: Run tests
            command: |
              ./cc-test-reporter before-build
              yarn run test
              ./cc-test-reporter after-build  --exit-code $?

workflows:
    version: 2
    build-deploy:
      jobs:
        - build
       